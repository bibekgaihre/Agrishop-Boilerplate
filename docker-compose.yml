version: '3.1'

services:
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5672" ]
      interval: 5s
      timeout: 15s
      retries: 1
    restart: on-failure
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - bikerent
  gateway:
    build:
      context: ./Gateway/
    volumes:
      - ./Gateway/:/usr/app/Gateway
    container_name: gateway
    env_file:
      - ./Gateway/.env
    ports:
      - "3000:3000"
    networks:
      - bikerent
  auth-service:
    build: 
      context: ./AuthService/
    volumes:
      - ./AuthService/:/usr/app/AuthService
      - /usr/app/node_modules
    container_name: auth-service
    env_file:
      - ./AuthService/.env
    ports:
      - "8080:8080"
    networks:
      - bikerent
    depends_on:
      - mongo
  product-service:
    build:
      context: ./ProductService/
    volumes:
      - ./ProductService:/usr/app/ProductService
      - /usr/app/node_modules
    container_name: product-service
    env_file:
      - ./ProductService/.env
    ports:
      - "8083:8083"
    networks:
      - bikerent
    restart: on-failure
    depends_on:
      - mongo
      - rabbitmq
  order-service:
    build: 
      context: ./OrderService/
    volumes:
      - ./OrderService/:/usr/app/OrderService
      - /usr/app/node_modules
    container_name: order-service
    env_file:
      - ./OrderService/.env
    ports:
      - "8081:8081"
    networks:
      - bikerent
    restart: on-failure
    depends_on:
      - mongo
      - rabbitmq
  payment-service:
    build:
      context: ./PaymentService/
    volumes:
      - ./PaymentService/:/usr/app/PaymentService
      - /usr/app/node_modules
    container_name: payment-service
    env_file:
      - ./PaymentService/.env
    ports:
      - "8082:8082"
    networks:
      - bikerent
    restart: on-failure
    depends_on:
      - mongo
      - rabbitmq
  notification-service:
    build:
      context: ./NotificationService/
    volumes:
      - ./NotificationService:/usr/app/NotificationService
    container_name: notification-service
    env_file:
      - ./NotificationService/.env
    ports:
      - "9000:9000"
    networks:
      - bikerent
    restart: on-failure
    depends_on:
      - mongo
      - rabbitmq
  mongo:
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - bikerent
networks:
  bikerent:
    driver: bridge
volumes:
  mongo-data:
    driver: local